@{
    ViewData["Title"] = "User Profile";
    var username = ViewBag.Username as string ?? "Guest";
    var email = ViewBag.Email ?? "example@example.com"; // Replace with dynamic email if available
    var tags = ViewBag.AllPrefernces as List<string> ??  new List<string>();
    var preferences = ViewBag.Preferences as List<string> ?? new List<string>(); // Fetch preferences as a list
    var userID = ViewBag.UserID ?? 1;
}


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Profile</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css">
    <style>
        body {
            margin: 0;
            padding: 0;
            background-color: #d3d3d3; /* Light gray background */
            font-family: Arial, sans-serif;
        }
        .header-bar {
            background-color: #007bff; /* Blue header */
            height: 60px;
            width: 100%;
            position: fixed;
            top: 0;
            left: 0;
            z-index: 10;
            display: flex;
            align-items: center;
            padding: 0 20px;
        }
        .home-button {
            background-color: #fff;
            color: #007bff;
            border: none;
            border-radius: 5px;
            padding: 5px 15px;
            font-size: 16px;
            text-decoration: none;
            font-weight: bold;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }
        .home-button:hover {
            background-color: #e0e0e0;
        }
        .sidebar {
            background-color: #34495e; /* Dark gray sidebar */
            width: 200px;
            height: 100vh; /* Full height */
            position: fixed;
            top: 60px;
            left: 0;
        }
        .content {
            margin-left: 220px; /* Adjust for sidebar width */
            padding: 20px;
            position: relative;
        }
        .profile-card {
            background-color: #757575; /* Gray card */
            color: white;
            border-radius: 10px;
            padding: 20px;
            max-width: 600px;
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2);
            position: relative;
        }
        .profile-card h2 {
            font-size: 24px;
            margin-bottom: 10px;
        }
        .profile-card p {
            font-size: 18px;
            margin: 0;
        }
        .button-row, .additional-button-row {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            margin-top: 20px;
        }
        .btn {
            background-color: #007bff;
            color: white;
            border: none;
            padding: 10px 15px;
            font-size: 14px;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }
        .btn:hover {
            background-color: #0056b3;
        }
        /* Overlay Styles */
        .overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.8);
            display: none;
            z-index: 1000;
            justify-content: center;
            align-items: center;
            color: white;
        }
        .overlay-content {
            background-color: #34495e;
            padding: 30px;
            border-radius: 10px;
            width: 90%;
            max-width: 800px;
            position: relative;
            text-align: center;
        }
        .overlay-buttons {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(100px, 1fr)); /* Responsive grid */
            gap: 10px;
            margin-top: 20px;
        }
        .overlay-buttons .btn {
            background-color: #007bff;
            color: white;
            border: none;
            padding: 10px;
            font-size: 14px;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }
        .overlay-buttons .btn:hover {
            background-color: #0056b3;
        }
        .close-button {
            margin-top: 20px;
            background-color: #ff6b6b;
            border: none;
            color: white;
            padding: 10px 20px;
            font-size: 16px;
            border-radius: 5px;
            cursor: pointer;
        }
        .close-button:hover {
            background-color: #e74c3c;
        }
    </style>
    <script>
        // Function to open the overlay
        function openOverlay() {
            document.getElementById("overlay").style.display = "flex";
        }

        // Function to close the overlay
        function closeOverlay() {
            document.getElementById("overlay").style.display = "none";
        }
    </script>
</head>
<body>
    <!-- Header -->
    <div class="header-bar">
        <a href="/Home/Index" class="home-button">Home</a>
    </div>

    <!-- Sidebar -->
    <div class="sidebar"></div>
    
    <script>
        function removePreference(buttonElement, preferenceName) {
            // Make an AJAX call to the server
            fetch('/Home/RemovePreference', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ userID, preferenceName }),
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Remove the button from the DOM
                    buttonElement.remove();
                    console.log("Preference removed:", preferenceName);
                } else {
                    alert('Failed to remove preference: ' + data.error);
                }
            })
            .catch(error => {
                console.error('Error removing preference:', error);
            });

        }
    </script>
    <!-- Content -->
    <div class="content">
        <div class="profile-card">
            <h2>Profile</h2>
            <p><strong>Name:</strong> @username</p>
            <p><strong>Email:</strong> @email</p>
            
            <!-- Preferences Buttons -->
            <div class="button-row">
                @if (preferences.Any())
                {
                    foreach (var preference in preferences)
                    {
                        <button class="btn" onclick="removePreference(this, @preference)">@preference</button>
                    }
                }
                else
                {
                    <p>No preferences set.</p>
                }
            </div>

            <!-- Additional Button Row -->
            <div class="additional-button-row">
                <button class="btn btn-secondary" onclick="openOverlay()">+</button>
            </div>
        </div>
    </div>

    <script>
        function addPreference(preferenceName) {

            Console.Writeline("add start")
            fetch('/Home/AddPreference', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ userId, preferenceName }),
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    const preferencesList = document.getElementById('preferencesList');
                    const newPreference = document.createElement('span');
                    newPreference.innerText = preferenceName;
                    newPreference.classList.add('preference-tag'); // Add styles if necessary
                    preferencesList.appendChild(newPreference);
                } else {
                    alert('Failed to add preference: ' + data.error);
                }
            })
            .catch(error => {
                console.error('Error adding preference:', error);
            });
        }
    </script>
    <!-- Overlay -->
    <div id="overlay" class="overlay">
        <div class="overlay-content">
            <h2>Select Preferences</h2>
            <div class="overlay-buttons">
                @if (tags.Any())
                {
                    foreach (var tag in tags)
                    {
                        if(!preferences.Contains(tag)){
                            <button class="btn" onclick="addPreference('@tag')">@tag</button>
                        }
                    }
                }
            </div>
            <button class="close-button" onclick="closeOverlay()">Close</button>
        </div>
    </div>
</body>
</html>
